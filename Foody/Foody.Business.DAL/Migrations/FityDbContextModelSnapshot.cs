// <auto-generated />
using System;
using Foody.Business.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Foody.Business.DAL.Migrations
{
    [DbContext(typeof(FityDbContext))]
    partial class FityDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Foody.Business.DAL.Entities.ApplicationUserRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.HasKey("Id");

                    b.ToTable("identity_users", (string)null);
                });

            modelBuilder.Entity("Foody.Business.DAL.Entities.ClientUserRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ChatId")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("chat_id");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("first_name");

                    b.Property<int>("Gender")
                        .HasColumnType("integer")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("last_name");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("client_users", (string)null);
                });

            modelBuilder.Entity("Foody.Business.DAL.Entities.IdentityModels.ApplicationUserRecordApplicationUserRoleRecord", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("identity_user_roles", (string)null);
                });

            modelBuilder.Entity("Foody.Business.DAL.Entities.IdentityModels.ApplicationUserRoleRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("roles", (string)null);
                });

            modelBuilder.Entity("Foody.Business.DAL.Entities.RequestedTrainingRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ClientUserRecordId")
                        .HasColumnType("integer");

                    b.Property<int>("CllientId")
                        .HasColumnType("integer")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("request_date");

                    b.Property<int>("TrainingStatus")
                        .HasColumnType("integer")
                        .HasColumnName("training_status");

                    b.HasKey("Id");

                    b.HasIndex("ClientUserRecordId");

                    b.HasIndex("CllientId");

                    b.ToTable("requested_trainings", (string)null);
                });

            modelBuilder.Entity("Foody.Business.DAL.Entities.ClientUserRecord", b =>
                {
                    b.HasOne("Foody.Business.DAL.Entities.ApplicationUserRecord", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Foody.Business.DAL.Entities.IdentityModels.ApplicationUserRecordApplicationUserRoleRecord", b =>
                {
                    b.HasOne("Foody.Business.DAL.Entities.IdentityModels.ApplicationUserRoleRecord", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Foody.Business.DAL.Entities.ApplicationUserRecord", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Foody.Business.DAL.Entities.RequestedTrainingRecord", b =>
                {
                    b.HasOne("Foody.Business.DAL.Entities.ClientUserRecord", null)
                        .WithMany("Trainings")
                        .HasForeignKey("ClientUserRecordId");

                    b.HasOne("Foody.Business.DAL.Entities.ClientUserRecord", "ClientUserRecord")
                        .WithMany()
                        .HasForeignKey("CllientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientUserRecord");
                });

            modelBuilder.Entity("Foody.Business.DAL.Entities.ApplicationUserRecord", b =>
                {
                    b.Navigation("Roles");
                });

            modelBuilder.Entity("Foody.Business.DAL.Entities.ClientUserRecord", b =>
                {
                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
